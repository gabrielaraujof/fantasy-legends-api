name: Continuous Integration (DEV)
on:
  push:
    branches: [main]
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18, 20]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Test:unit
        run: npm run test:cov

      - name: Test:e2e
        run: npm run test:cov

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/lcov.info
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.node }}
          path: dist 

  deploy:
    if: github.event_name != 'pull_request'
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: development

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-18
          path: dist

      - name: Setup aws cli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy serverless to AWS Lambda
        run: npm run deploy
